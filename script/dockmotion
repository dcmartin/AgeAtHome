#!/bin/bash

# Set the correct timezone
if [ -n "${TIMEZONE}" ]; then
    cp /usr/share/zoneinfo/${TIMEZONE} /etc/localtime
fi

# Override capture size for Motion
if [ -n "${MOTION_PIXELS}" ]; then
    # added comment
    echo "Set capture size to ${MOTION_PIXELS}"
    IFS='x' read -a wxh<<< "${MOTION_PIXELS}"
    WIDTH=${wxh[0]}
    HEIGHT=${wxh[1]}
    sed -i "s/^width\s[0-9]\+/width ${WIDTH}/g" /etc/motion/motion.conf
    sed -i "s/^height\s[0-9]\+/height ${HEIGHT}/g" /etc/motion/motion.conf
fi

# override motion daemon status
if [ -n "${MOTION_DAEMON}" ]; then
   echo "Set daemon to ${MOTION_DAEMON}"
   sed -i "s/^daemon\s.*/daemon ${MOTION_DAEMON}/g" /etc/motion/motion.conf
fi

# Override control and video ports
if [ -n "${WEBCONTROL_PORT}" ]; then
    echo "Set webcontrol_port to ${WEBCONTROL_PORT}"
    sed -i "s/^webcontrol_port\s[0-9]\+/webcontrol_port ${WEBCONTROL_PORT}/g" /etc/motion/motion.conf
fi
if [ -n "${STREAM_PORT}" ]; then
    echo "Set stream_port to ${STREAM_PORT}"
    sed -i "s/^stream_port\s[0-9]\+/stream_port ${STREAM_PORT}/g" /etc/motion/motion.conf
fi
if [ -n "${MOTION_IMAGE_ROTATE}" ]; then
    echo "Set image rotation to ${MOTION_IMAGE_ROTATE} degrees"
    sed -i "s/^rotate\s[0-9]\+/rotate ${MOTION_IMAGE_ROTATE}/g" /etc/motion/motion.conf
fi
# Override THRESHOLD_TUNE (which pictures selected; on, off, first, best, center); default "center"
if [ -n "${MOTION_OUTPUT_PICTURES}" ]; then
    echo "Set output pictures to ${MOTION_OUTPUT_PICTURES}"
    sed -i "s/^output_pictures\s.*/output_pictures ${MOTION_OUTPUT_PICTURES}/g" /etc/motion/motion.conf
fi
# Override THRESHOLD_TUNE (pixels changed) default "off"
if [ -n "${MOTION_THRESHOLD_TUNE}" ]; then
   echo "Set threshold_tune to ${MOTION_THRESHOLD_TUNE}"
   sed -i "s/^threshold_tune\s.*/threshold_tune ${MOTION_THRESHOLD_TUNE}/g" /etc/motion/motion.conf
fi
# Override THRESHOLD (pixels changed) default 1500
if [ -n "${MOTION_THRESHOLD}" ]; then
   echo "Set threshold to ${MOTION_THRESHOLD}"
    sed -i "s/^threshold\s[0-9]\+/threshold ${MOTION_THRESHOLD}/g" /etc/motion/motion.conf
fi
# Override EVENT_GAP (seconds) default 10
if [ -n "${MOTION_EVENT_GAP}" ]; then
   echo "Set event_gap to ${MOTION_EVENT_GAP}"
    sed -i "s/^event_gap\s[0-9]\+/event_gap ${MOTION_EVENT_GAP}/g" /etc/motion/motion.conf
fi

# setup IBM IOTF
if [ -n "${IOTF_ORG_ID}" ]; then
    IOTF_CONFIG_FILE="/etc/iotsample-raspberrypi/device.cfg"
    echo "#Device configuration file" > "${IOTF_CONFIG_FILE}"
    echo "org = ${IOTF_ORG_ID}" >> "${IOTF_CONFIG_FILE}"
    echo "type = ${IOTF_DEVICE_TYPE}" >> "${IOTF_CONFIG_FILE}"
    echo "id = ${IOTF_DEVICE_ID}" >> "${IOTF_CONFIG_FILE}"
    echo "auth-method = ${IOTF_AUTH_METHOD}" >> "${IOTF_CONFIG_FILE}"
    echo "auth-token = ${IOTF_AUTH_TOKEN}" >> "${IOTF_CONFIG_FILE}"
    echo "#End of Configuration file" >> "${IOTF_CONFIG_FILE}"
fi
# and show
if [ -e "${IOTF_CONFIG_FILE}" ]; then
    cat "${IOTF_CONFIG_FILE}"
fi

# VSFTPD
service vsftpd restart
service vsftpd status

# restart, check status, getdeviceid
service iot restart
service iot status
service iot getdeviceid

if [ -n "${URL_LAUNCHER_URL}" ]; then
  # override motion daemon status for electron
  echo 'Overriding MOTION_DAEMON to "on" for ELECTRON'
  sed -i "s/^daemon\s.*/daemon on/g" /etc/motion/motion.conf
  # Run motion (as daemon)
  echo "START MOTION AS DAEMON"
  motion -l /dev/stderr
  # By default docker gives us 64MB of shared memory size but to display heavy pages we need more.
  umount /dev/shm && mount -t tmpfs shm /dev/shm
  # start X
  rm /tmp/.X0-lock &>/dev/null || true
  echo "START ELECTRON"
  startx /usr/src/app/node_modules/electron/dist/electron /usr/src/app --enable-logging
else
  # Run motion (not as daemon)
  echo "START MOTION WITHOUT ELECTRON"
  motion -n -l /dev/stderr
fi
